---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/paperless-ngx/paperless-ngx
      tag: 2.0.1
    env:
      COMPOSE_PROJECT_NAME: paperless
      PAPERLESS_CONSUMER_POLLING: "60"
      PAPERLESS_CONSUMER_RECURSIVE: "true"
      PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
      PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
      PAPERLESS_DBHOST: default-paperless-ngx-postgresql
      PAPERLESS_DBNAME: paperless-ngx
      PAPERLESS_DBUSER: paperless-ngx
      PAPERLESS_DBPASS: ${SECRET_PAPERLESS_NGX_DB_PASSWORD}
      PAPERLESS_FILENAME_FORMAT: "{created_year}/{correspondent}/{title}"
      PAPERLESS_OCR_LANGUAGE: "deu+eng"
      PAPERLESS_PORT: 8000
      PAPERLESS_BIND_ADDR: 0.0.0.0
      PAPERLESS_REDIS: redis://paperless-redis.default.svc.cluster.local:6379
      PAPERLESS_TASK_WORKERS: 2
      PAPERLESS_TIME_ZONE: "Europe/Berlin"
      PAPERLESS_URL: "https://paperless.${DOMAIN}"
      USERMAP_GID: 65543
      PAPERLESS_ADMIN_USER:
        valueFrom:
          secretKeyRef:
            name: paperless-secrets
            key: PAPERLESS_ADMIN_USER
      PAPERLESS_ADMIN_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: paperless-secrets
            key: PAPERLESS_ADMIN_PASSWORD
      PAPERLESS_SECRET_KEY:
        valueFrom:
          secretKeyRef:
            name: paperless-secrets
            key: PAPERLESS_SECRET_KEY

    persistence:
      data:
        enabled: true
        mountPath: /paperless
        existingClaim: paperless-ngx-data

    service:
      main:
        ports:
          http:
            port: 8000
    ingress:
      main:
        enabled: true
        ingressClassName: nginx-internal
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
        hosts:
          - host: &host "paperless.${DOMAIN}"
            paths:
              - path: /
        tls:
          - hosts:
              - *host
    resources:
      requests:
        cpu: 200m
        memory: 128Mi
      limits:
        cpu: 2500m
        memory: 1500Mi
